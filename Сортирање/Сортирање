
Дадена е низа со N природни броеви. Треба да се сортира низата така што во првиот дел од низата ќе бидат подредени непарните броеви од неа во растечки редослед, а во вториот дел парните броеви во опаѓачки редослед. 
Во првиот ред од влезот даден е бројот на елементи во низата N, а во вториот ред се дадени броевите. На излез треба да се испечати сортираната низа.
Име на класата: OddEvenSort
----------------
Given a sequence of N natural numbers. It is necessary to sort the sequence so that in the first part of the sequence the odd numbers from it will be sorted in ascending order, and in the second part the even numbers will be sorted in descending order.
In the first line of the input, the number of elements in the array N is given, and in the second line, the numbers are given. The output should print the sorted array.
Class Name: OddEvenSort

For example:
Input 	
7
2 5 3 5 8 6 10

Result
3 5 5 10 8 6 2

import java.io.BufferedReader;
import java.io.IOException;
import java.io.InputStreamReader;
import java.util.ArrayList;
import java.util.Collection;
import java.util.Collections;
import java.util.List;

public class Main {

    static void oddEvenSort(int a[], int n)
    {
        // Vasiot kod tuka
        List<Integer>OddList=new ArrayList<>();
        List<Integer>EvenList=new ArrayList<>();
        for (int value:a){
            if (value%2!=0){
                OddList.add(value);
            }else {
                EvenList.add(value);
            }
        }
        Collections.sort(OddList);
        Collections.sort(EvenList,Collections.reverseOrder());

        int index=0;
        for(int num:OddList){
            a[index++]=num;
        }
        for (int num:EvenList){
            a[index++]=num;
        }
    }

    public static void main(String[] args) throws IOException{
        int i;
        BufferedReader stdin = new BufferedReader( new InputStreamReader(System.in));
        String s = stdin.readLine();
        int n = Integer.parseInt(s);

        s = stdin.readLine();
        String [] pom = s.split(" ");
        int [] a = new int[n];
        for(i=0;i<n;i++)
            a[i]=Integer.parseInt(pom[i]);
        oddEvenSort(a,n);
        for(i=0;i<n-1;i++)
            System.out.print(a[i]+" ");
        System.out.print(a[i]);
    }
}

2.
Дадена е низа со N природни броеви. Треба да се сортира низата со помош на таканареченото shaker (cocktail) сортирање. Ова сортирање е варијација на сортирањето со меурчиња (bubble sort) со тоа што во секоја итерација 
низата се изминува два пати. Во првото поминување најмалиот елемент се поместува на почетокот на низата, а при второто најголемиот елемент се поместува на крајот. 
Во првиот ред од влезот даден е бројот на елементи во низата N, а во вториот ред се дадени броевите. На излез треба да се испечати низата по секое изминување во посебен ред.
Име на класата: ShakerSort
-------------------
Given a sequence of N natural numbers. The array should be sorted using the so-called shaker (cocktail) sort. This sort is a variation of the bubble sort in that in each iteration the array is traversed twice. In the first pass, the smallest element is moved to the beginning of the array, and in the second pass, the largest element is moved to the end.
In the first line of the input, the number of elements in the array N is given, and in the second line, the numbers are given. The output should print the string after each pass in a separate line.
Class Name: ShakerSort
For example:
Input 	
8
6 10 13 5 8 17 2 5

Result
2 6 10 13 5 8 17 5
2 6 10 5 8 13 5 17
2 5 6 10 5 8 13 17
2 5 6 5 8 10 13 17
2 5 5 6 8 10 13 17
2 5 5 6 8 10 13 17
2 5 5 6 8 10 13 17
2 5 5 6 8 10 13 17
